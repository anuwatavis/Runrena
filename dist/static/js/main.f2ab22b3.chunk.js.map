{"version":3,"sources":["component/dashboard/Dashboard.js","component/layout/SignOutLink.js","component/layout/Search.js","component/layout/SearchBox.js","component/store/actions/queryUserData.js","component/layout/SignInLink.js","component/store/actions/authAction.js","component/layout/Navbar.js","component/dashboard/AtheleteProfile.js","component/dashboard/ChartWeekReport.js","component/dashboard/WeekReport.js","component/store/actions/weekQueryAction.js","component/Activities/DeletePost.js","component/store/actions/activityAction.js","component/Activities/ActivitiesSummary.js","component/Activities/ActivitiesList.js","component/dashboard/Informations.js","component/store/actions/getEventAction.js","component/Activities/ActivityData.js","component/Activities/Message.js","component/Activities/UploadTest.js","component/store/actions/friendAction.js","component/store/actions/limitActivityQuery.js","component/dashboard/High.js","component/auth/SignIn.js","component/auth/SignUp.js","component/StatActivity/UserProfile.js","component/store/actions/followerAction.js","component/store/actions/followerCountAction.js","component/StatActivity/ChartCompare.js","component/StatActivity/Overview.js","component/store/actions/activityStatAction.js","component/store/actions/userDataAction.js","component/store/actions/queryByTime.js","component/StatActivity/TableStat.js","component/store/actions/queryActivitySummary.js","component/StatActivity/TableDayActivity.js","component/StatActivity/MyStat.js","component/store/actions/getUserActivityByDateAction.js","component/StatActivity/UserDashboard.js","component/MyProfile/MyProfile.js","component/store/actions/profileAction.js","component/MyProfile/MyProfilePage.js","component/admin/InformationBox.js","component/admin/AdminDashboard.js","component/store/actions/createEventAction.js","App.js","serviceWorker.js","component/store/reducers/authReducer.js","component/store/reducers/activityReducer.js","component/store/reducers/runrenaRuducer.js","component/store/reducers/activityPostReducer.js","component/store/reducers/activityStatReducer.js","component/store/reducers/userActionReducer.js","component/store/reducers/activityByDateReducer.js","component/store/reducers/activityUserByDateReducer.js","component/store/reducers/queryActivityByWeek.js","component/store/reducers/limitQueryReducer.js","component/store/reducers/querySummaryReducer.js","component/store/reducers/queryUsersDataReducer.js","component/store/reducers/eventReducer.js","component/store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["sortedActivities","SignOutLink","Nav","navbar","NavItem","NavLink","href","Component","SearchBox","state","selectedOption","userData","props","openMenu","componentDidMount","queryUserData","handleChange","setState","window","location","value","handleInputChange","query","action","hideMenu","this","userDataOption","forEach","user","optionValue","label","push","onChange","onInputChange","options","onBlur","menuIsOpen","className","React","connect","queryUsersDataReducer","users","dispatch","data","getState","getFirestore","collection","get","then","querySnapshot","usersData","type","profile","firebase","signOut","getFirebase","auth","profileUrl","length","name","firstName","lastName","size","round","src","onClick","admin","useState","isOpen","setIsOpen","links","uid","Navbar","color","light","expand","fixed","NavbarBrand","NavbarToggler","Collapse","Card","Row","Col","md","to","CardBody","CardTitle","following","followers","activities","CardFooter","quote","labels","datasets","backgroundColor","highlightFill","borderColor","borderWidth","barPercentage","scales","yAxes","ticks","beginAtZero","min","ChartWeekReport","activitiesData","result","daysLabels","totalDistance","newActivity","daysOfWeek","activity","today","Date","createdAt","date","getFullYear","getMonth","getDate","getDay","reduce","res","day","days","toFixed","width","height","WeekReport","dateTimeAndUserId","dateOfWeek","numberForStart","numberForEnd","start","setDate","end","weekActivity","activityByWeek","activitiesUserByWeek","activitiesByWeek","dateAndUserId","userId","where","weekQueryAction","deletePost","console","log","firestore","doc","id","delete","activityCount","update","reload","deletePostAction","modal","setModal","toggle","Button","class","Modal","ModalHeader","ModalBody","ModalFooter","deleteState","initial","xs","moment","toDate","calendar","titleActivity","averagePace","totalTime","ActivitiesList","map","key","Math","random","Alert","Informations","getEvent","eventData","CardSubtitle","title","imageUrl","alt","CardText","description","funRun","miniMarathon","halfMarathon","marathon","CardLink","eventUrl","target","eventReducer","events","friendId","dateData","event","getEventAction","ActivityData","activityData","Message","msg","visible","setVisible","UploadTest","averageElevation","totalCalories","averageHr","averageCadence","handelFile","e","file","files","Papa","parse","header","complete","updateData","summary","handelTitleChange","handelSubmit","preventDefault","createActivity","document","getElementById","reset","CardHeader","Form","onSubmit","FormGroup","Label","for","Input","placeholder","required","CustomInput","convert_to_float","timeString","parseFloat","replace","parseInt","add","userFirstName","userLastName","catch","err","friendAction","friend","followered","countQuery","Dashboard","activitiLimit","handelClick","scrollTo","top","behavior","handelQuery","newday","limitQuery","slice","sort","a","b","compose","ownProps","ordered","limit","limitQueryReducer","limitActivityQuery","firestoreConnect","High","SignIn","email","password","handelChange","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","weight","gender","age","signUp","form","max","newUser","createUserWithEmailAndPassword","resp","set","initials","authState","UserProfile","followerProfile","followerId","followedState","followerState","activitiesCount","handelFollowerClicked","followedStateInvert","followerAction","followerCountAction","followData","profileData","Badge","followerCount","followed","ChartCompare","friendFollowerData","nextProps","maintainAspectRatio","tooltips","displayColors","titleFontSize","bodyFontSize","xPadding","yPadding","callbacks","tooltipItem","Overview","selectedDay","handleDayChange","modifiers","dayPickerInput","input","getInput","dateTimeAndFriendList","queryByTime","friendData","activityByDate","isDisabled","isEmpty","onDayChange","dayPickerProps","selectedDays","activitiesStat","activityStat","activitiesByDate","friendList","TableStat","averageStat","queryActivitySummary","dataFunRun","dataInThisMonth","distanceSum","thisMonth","second","timeStamp","seconds","array","toString","split","floor","average","i","len","v","timeSum","elevGainSum","monthCount","Table","scope","avgDistance","avgTime","runPerMonth","bestFunRun","Time","runningCount","querySummaryReducer","summaryActivity","TableDayActivity","activityUserByDate","striped","MyStat","getInitialState","from","handleDayClick","range","DateUtils","addDayToRange","getActivityUserByDate","bind","handleResetClick","todayTimeStamp","numberOfMonths","onDayClick","defaultProps","activitiesUserByDate","dateStart","dateEnd","toLocaleDateString","newDate","getUserActivityByDateAction","UserDashboard","followerData","followedStateData","undefined","firebaseConnect","match","params","runrena_friend","subcollections","MyProfile","nameClicked","lastNameClicked","quoteClicked","weightClicked","heightClicked","genderClicked","profileClicked","authId","handleClick","handelClickLastName","handelChangeFirstName","handleChangeLastName","profileUpdate","handelSubmitLastName","handleClickQuote","handelSubmitQuote","handelChangeQuote","handelClickWeight","handelChangeWeight","handelSubmitWeight","handelClickHeight","handelChangeHeight","handelSubmitHeight","handelClickGender","handelChangeGender","handelSubmitGender","handelClickProfile","handelChangeProfile","handelSubmitProfile","authCheck","inline","hover","maxLength","defaultValue","disabled","maxlength","MyProfilePage","InformationBox","funrunState","miniState","halfState","marathonState","AdminDashboard","public","createEvent","isLoaded","Container","publicDate","createEventAction","App","path","component","exact","UserDashbord","Boolean","hostname","initState","authReducer","message","distance","pace","time","activityReducer","newState","runrenaReducer","activityPostReducer","activityStatReducer","userDataReducer","activityByDateReducer","activityUserByDateReducer","queryActivityByWeek","rootReducer","combineReducers","firestoreReducer","firebaseReducer","activityPost","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f2ab22b3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport AtheleteProfile from \"./AtheleteProfile\";\r\nimport WeekReport from \"./WeekReport\";\r\nimport ActivitiesList from \"../Activities/ActivitiesList\";\r\nimport Information from \"./Informations\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport UploadTest from \"../Activities/UploadTest\";\r\nimport axios from \"axios\";\r\nimport { friendAction } from \"../store/actions/friendAction\";\r\nimport { Button } from \"reactstrap\";\r\nimport { limitActivityQuery } from \"../store/actions/limitActivityQuery\";\r\nimport { Col, Row } from \"reactstrap\";\r\n\r\nlet sortedActivities;\r\nlet countQuery = 7;\r\nclass Dashboard extends Component {\r\n  state = {\r\n    activitiLimit: 5,\r\n  };\r\n  componentDidMount() {\r\n    this.props.friendAction(this.props.auth.uid);\r\n  }\r\n  handelClick = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  handelQuery = () => {\r\n    let today = new Date();\r\n    let date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n    let day = new Date(date);\r\n    countQuery = countQuery + 1;\r\n    day.setDate(day.getDate() - countQuery);\r\n    let newday = day.getFullYear() + \"-\" + (day.getMonth() + 1) + \"-\" + day.getDate();\r\n    this.props.limitQuery(newday);\r\n  };\r\n\r\n  render() {\r\n    const { activities, auth, users, friend } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/\" />; // if don't login and dashboard will go to login\r\n    if (activities) {\r\n      sortedActivities = activities.slice().sort((a, b) => b.createdAt - a.createdAt);\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container dashboard\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <AtheleteProfile />\r\n              <WeekReport />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <UploadTest />\r\n              <ActivitiesList activities={sortedActivities} users={users} />\r\n              <Row>\r\n                <Col md={12}>\r\n                  <Button className=\"col-12 mb-5\" onClick={this.handelQuery}>\r\n                    MORE\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n            <div className=\"col information-box\">\r\n              <Information />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button className=\"scroll\" onClick={this.handelClick}>\r\n          <h2>^</h2>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    friend: state.friend.friend,\r\n    activities: state.firestore.ordered.activities,\r\n    auth: state.firebase.auth,\r\n    users: state.firestore.ordered.users,\r\n    limit: state.limitQueryReducer.today,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    friendAction: (userId) => dispatch(friendAction(userId)),\r\n    limitQuery: (data) => dispatch(limitActivityQuery(data)),\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect((props) => {\r\n    // console.log(\"props\", props);\r\n    let date = new Date(props.limit);\r\n\r\n    return [\r\n      {\r\n        collection: \"activities\",\r\n        where: [\r\n          [\"userId\", \"in\", props.name],\r\n          [\"createdAt\", \">\", date],\r\n        ],\r\n      },\r\n      { collection: \"users\", where: [[\"userId\", \"in\", props.name]] },\r\n    ];\r\n  })\r\n)(Dashboard);\r\n//where: [[\"userId\", \"in\", props.friend]]\r\n","import React from \"react\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nconst SignOutLink = () => {\r\n  return (\r\n    <Nav navbar>\r\n      <NavItem>\r\n        <NavLink href=\"/signup\">Sign Up</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href=\"/\">Log In</NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default SignOutLink;\r\n","import React, { Component } from \"react\";\r\nimport { Nav, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport SelectSearch from \"react-select-search\";\r\nclass Search extends Component {\r\n  render() {\r\n    return (\r\n      <Nav navbar>\r\n        <Form inline>\r\n          <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n            <Label for=\"exampleEmail\" className=\"mr-sm-2\">\r\n              Find Runner\r\n            </Label>\r\n            <Input type=\"text\" name=\"email\" id=\"exampleEmail\" placeholder=\"Runner Name\" />\r\n          </FormGroup>\r\n        </Form>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { queryUserData } from \"../store/actions/queryUserData\";\r\nconst options = [\r\n  { value: \"7FKB6O9B5ec0Cx7gPw6glBLJxdp2\", label: \"Anu\" },\r\n  { value: \"nwuuK1tXPYTaCpL1h6IkNilHIM32\", label: \"Peter\" },\r\n  { value: \"XtyfnWfWTzLtfH0AH8QRQY0tKH33\", label: \"Anuwat\" },\r\n  { value: \"jcB2aVB87SNUUj3BVB99ETo25Zm2\", label: \"Toby\" },\r\n];\r\n\r\nclass SearchBox extends React.Component {\r\n  state = {\r\n    selectedOption: null,\r\n    userData: this.props.userData,\r\n    openMenu: false,\r\n  };\r\n  componentDidMount = () => {\r\n    this.props.queryUserData(\"sss\");\r\n  };\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    this.setState({ openMenu: false });\r\n    window.location = \"/runner/\" + selectedOption.value;\r\n  };\r\n  handleInputChange = (query, { action }, selectedOption) => {\r\n    if (action === \"input-change\") {\r\n      this.setState({ openMenu: true });\r\n    }\r\n  };\r\n  hideMenu = () => {\r\n    this.setState({ openMenu: false });\r\n  };\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n    const { userData } = this.props;\r\n    const userDataOption = [];\r\n    userData.forEach((user) => {\r\n      //console.log(\"SearchBox -> render -> user\", user);\r\n      let optionValue = { value: user[\"userId\"], label: user[\"firstName\"] };\r\n      userDataOption.push(optionValue);\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n        onInputChange={this.handleInputChange}\r\n        options={userDataOption}\r\n        onBlur={this.hideMenu}\r\n        menuIsOpen={this.state.openMenu}\r\n        className=\"searchBox mr-4\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.queryUsersDataReducer.users,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    queryUserData: (data) => dispatch(queryUserData(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBox);\r\n","export const queryUserData = (data) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"users\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let usersData = [];\r\n        querySnapshot.forEach((user) => {\r\n          usersData.push(user.data());\r\n        });\r\n        dispatch({ type: \"QUERY_USERS_DATA\", usersData });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport Avatar from \"react-avatar\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../store/actions/authAction\";\r\nimport SearchBox from \"./SearchBox\";\r\nconst SignInLink = (props) => {\r\n  const { profile } = props;\r\n  return (\r\n    <Nav navbar>\r\n      <SearchBox />\r\n      <NavItem>\r\n        <a href={\"/runner/\" + profile.auth}>\r\n          {!profile[\"isEmpty\"] && profile.profileUrl.length <= 2 ? (\r\n            <Avatar className=\"mb-2\" name={profile.firstName + \" \" + profile.lastName} size=\"35\" round={true} />\r\n          ) : null}\r\n\r\n          {!profile[\"isEmpty\"] && profile.profileUrl.length > 2 ? (\r\n            <Avatar\r\n              className=\"mb-2\"\r\n              name={profile.firstName + \" \" + profile.lastName}\r\n              size=\"35\"\r\n              round={true}\r\n              src={profile.profileUrl}\r\n            />\r\n          ) : null}\r\n        </a>\r\n      </NavItem>\r\n      <NavItem>\r\n        {/* <a onClick={props.signOut}>Log Out</a> */}\r\n        <NavLink href=\"/\" onClick={props.signOut}>\r\n          Log Out\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href={\"/runner/\" + props.auth}>{props.profile.firstName}</NavLink>\r\n      </NavItem>\r\n      {profile.admin ? (\r\n        <NavItem>\r\n          <NavLink href=\"/admin\">Create Event</NavLink>\r\n        </NavItem>\r\n      ) : null}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInLink);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    console.log(newUser);\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            weight: parseInt(newUser.weight),\r\n            height: parseInt(newUser.height),\r\n            gender: newUser.gender,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n            quote: \"\",\r\n            userId: resp.user.uid,\r\n            followers: 0,\r\n            following: 0,\r\n            activities: 0,\r\n            profileUrl: \"\",\r\n            admin: false,\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand } from \"reactstrap\";\r\nimport SignOutLinks from \"./SignOutLink\";\r\nimport Search from \"./Search\";\r\nimport { connect } from \"react-redux\";\r\nimport SignInLink from \"./SignInLink\";\r\nimport SearchBox from \"./SearchBox\";\r\nconst Navbars = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = (props) => setIsOpen(!isOpen);\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignInLink profile={profile} auth={auth.uid} /> : <SignOutLinks />;\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\r\n        <NavbarBrand href=\"/\">Runrena</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Navbar className=\"ml-auto\">\r\n            {/* <Search /> */}\r\n            {/* <SearchBox /> */}\r\n            {links}\r\n          </Navbar>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbars);\r\n","import React from \"react\";\r\nimport { Card, CardFooter, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"react-avatar\";\r\nimport { connect } from \"react-redux\";\r\nconst AtheleteProfile = ({ profile, auth }) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"athelete-profile-card\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Link to={\"/runner/\" + auth.uid}>\r\n              <div className=\"avatar-flex\">\r\n                {typeof profile.profileUrl != \"undefined\" && profile.profileUrl.length <= 2 ? (\r\n                  <Avatar className=\"mb-2\" name={profile.firstName + \" \" + profile.lastName} size=\"100\" round={true} />\r\n                ) : null}\r\n\r\n                {typeof profile.profileUrl != \"undefined\" && profile.profileUrl.length > 2 ? (\r\n                  <Avatar\r\n                    className=\"mb-2\"\r\n                    name={profile.firstName + \" \" + profile.lastName}\r\n                    size=\"100\"\r\n                    round={true}\r\n                    src={profile.profileUrl}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <CardBody className=\"text-center\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <CardTitle>\r\n                <h4>{profile.firstName}</h4>\r\n              </CardTitle>\r\n            </Col>\r\n            <Col md=\"12\">\r\n              <Row>\r\n                <Col md=\"4\">\r\n                  <div className=\"text-small\">Following</div>\r\n                  <div className=\"stat-profile\">\r\n                    <p>{profile.following}</p>\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                  <div className=\"text-small\">Follower</div>\r\n                  <div className=\"stat-profile\">\r\n                    <p>{profile.followers}</p>\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                  <div className=\"text-small\">Activities</div>\r\n                  <div className=\"stat-profile\">\r\n                    <p>{profile.activities}</p>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <div className=\"card-section\">\r\n            <div className=\"text-label text-small\">Rerena Runner</div>\r\n            <div className=\"text-small\">{profile.quote}</div>\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.firebase.profile,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(AtheleteProfile);\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardFooter, CardBody, CardTitle } from \"reactstrap\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nconst data = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: \"Beat\",\r\n      backgroundColor: [\r\n        \"#4d4c7d\",\r\n        \"#fb7b6b\",\r\n        \"#d7385e\",\r\n        \"#4d4c7d\",\r\n        \"#fb7b6b\",\r\n        \"#d7385e\",\r\n        \"#4d4c7d\",\r\n        \"#fb7b6b\",\r\n        \"#d7385e\",\r\n      ],\r\n      highlightFill: \"yellow\",\r\n      borderColor: \"white\",\r\n      borderWidth: 2,\r\n      barPercentage: 0.4,\r\n      data: [],\r\n    },\r\n  ],\r\n};\r\nvar options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n          min: 0,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\nclass ChartWeekReport extends Component {\r\n  state = {\r\n    activitiesData: this.props.activities,\r\n  };\r\n  render() {\r\n    const { activitiesData } = this.state;\r\n    var result = [];\r\n    let daysLabels = [];\r\n    let totalDistance = [];\r\n    let newActivity = [];\r\n    let daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    // console.log(activitiesData);\r\n    activitiesData.forEach((activity) => {\r\n      var today = new Date(activity.createdAt[\"seconds\"] * 1000);\r\n      var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n      activity[\"day\"] = new Date(date).getDay();\r\n      newActivity.push(activity);\r\n    });\r\n\r\n    newActivity.reduce(function (res, value) {\r\n      if (!res[value.day]) {\r\n        res[value.day] = { days: value.day, totalDistance: 0 };\r\n        result.push(res[value.day]);\r\n      }\r\n      res[value.day].totalDistance += value.totalDistance;\r\n      return res;\r\n    }, {});\r\n\r\n    result.forEach((activity) => {\r\n      daysLabels.push(daysOfWeek[activity.days]);\r\n      totalDistance.push(activity.totalDistance.toFixed(2));\r\n    });\r\n\r\n    data[\"labels\"] = daysLabels;\r\n    data[\"datasets\"][0].data = totalDistance;\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"athelete-week-report\">\r\n          <CardBody className=\"text-center\">\r\n            <CardTitle>\r\n              <h4>Week Report</h4>\r\n            </CardTitle>\r\n            <Bar data={data} width={150} height={150} options={options} />\r\n          </CardBody>\r\n          <CardFooter>\r\n            <div className=\"card-section\">\r\n              <div className=\"text-label text-small\"></div>\r\n              <div className=\"text-small\"></div>\r\n            </div>\r\n          </CardFooter>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ChartWeekReport;\r\n","import React, { Component } from \"react\";\r\nimport ChartWeekReport from \"../dashboard/ChartWeekReport\";\r\nimport { connect } from \"react-redux\";\r\nimport { weekQueryAction } from \"../store/actions/weekQueryAction\";\r\nclass WeekReport extends Component {\r\n  componentDidMount = () => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n    let dateTimeAndUserId = [];\r\n    let dateOfWeek = new Date(date);\r\n    let numberForStart = dateOfWeek.getDay();\r\n    let numberForEnd = 6 - dateOfWeek.getDay();\r\n    let start = new Date(dateOfWeek);\r\n    start.setDate(start.getDate() - numberForStart);\r\n    let end = new Date(dateOfWeek);\r\n    end.setDate(end.getDate() + numberForEnd + 1);\r\n    dateTimeAndUserId.push(start);\r\n    dateTimeAndUserId.push(end);\r\n    dateTimeAndUserId.push(this.props.auth);\r\n    //console.log(\"WeekReport -> componentDidMount -> dateTimeAndUserId\", dateTimeAndUserId);\r\n    this.props.weekActivity(dateTimeAndUserId);\r\n  };\r\n  render() {\r\n    return <div>{this.props.activityByWeek ? <ChartWeekReport activities={this.props.activityByWeek} /> : null}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state);\r\n  //console.log(state);\r\n  return {\r\n    auth: state.firebase.auth.uid,\r\n    activityByWeek: state.activitiesUserByWeek.activitiesByWeek,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    weekActivity: (dateAndUserId) => dispatch(weekQueryAction(dateAndUserId)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeekReport);\r\n","export const weekQueryAction = (dateTimeAndUserId) => {\r\n  // console.log(dateTimeAndUserId);\r\n  let start = dateTimeAndUserId[0];\r\n  let end = dateTimeAndUserId[1];\r\n  let userId = dateTimeAndUserId[2];\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"activities\")\r\n      .where(\"userId\", \"==\", userId)\r\n      .where(\"createdAt\", \">\", start)\r\n      .where(\"createdAt\", \"<\", end)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let activities = [];\r\n        querySnapshot.forEach((activity) => {\r\n          activities.push(activity.data());\r\n          //console.log(activities);\r\n        });\r\n        dispatch({ type: \"GET_WEEK_ACTIVITY\", activities });\r\n      });\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { deletePostAction } from \"../store/actions/activityAction\";\r\nimport { connect } from \"react-redux\";\r\nconst DeletePost = (props) => {\r\n  const { deletePost, activity } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n  const handelDeletePost = () => {\r\n    deletePost(activity);\r\n    setModal(!modal);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button size=\"sm\" color=\"danger\" onClick={toggle} className=\"ml-4 rounded-circle\">\r\n        <i class=\"icon-delete\"></i>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Delete Post</ModalHeader>\r\n        <ModalBody>Do you want to delete this post ?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={handelDeletePost}>\r\n            Delete\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { deletePost: (activity) => dispatch(deletePostAction(activity)) };\r\n};\r\nexport default connect(null, mapDispatchToProps)(DeletePost);\r\n","export const createActivity = (activity) => {\r\n  function convert_to_float(timeString) {\r\n    var floatValue = parseFloat(timeString.replace(\":\", \".\"));\r\n    return floatValue;\r\n  }\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const userId = getState().firebase.auth.uid;\r\n    const totalTime = convert_to_float(activity.totalTime);\r\n    const averagePace = convert_to_float(activity.averagePace);\r\n    const totalDistance = parseFloat(activity.totalDistance);\r\n    const averageElevation = parseInt(activity.averageElevation);\r\n    const totalCalories = parseInt(activity.totalCalories);\r\n    const averageHr = parseInt(activity.averageHr);\r\n    const averageCadence = parseInt(activity.averageCadence);\r\n    firestore\r\n      .collection(\"activities\")\r\n      .add({\r\n        ...activity,\r\n        userFirstName: profile.firstName,\r\n        userLastName: profile.lastName,\r\n        userId: userId,\r\n        totalDistance,\r\n        averageElevation,\r\n        totalCalories,\r\n        averageHr,\r\n        averageCadence,\r\n        totalTime,\r\n        averagePace,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(userId)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            let activityCount = querySnapshot.data()[\"activities\"] + 1;\r\n            firestore\r\n              .collection(\"users\")\r\n              .doc(userId)\r\n              .update({ activities: activityCount })\r\n              .then(console.log(\"done activity count\"));\r\n            dispatch({ type: \"CREATE_ACTIVITY\", activity });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\" }, err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deletePostAction = (activity) => {\r\n  console.log(\"deletePostAction -> activity\", activity);\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const userId = getState().firebase.auth.uid;\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"activities\")\r\n      .doc(activity.id)\r\n      .delete()\r\n      .then(() => {\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(userId)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            let activityCount = querySnapshot.data()[\"activities\"] - 1;\r\n            firestore\r\n              .collection(\"users\")\r\n              .doc(userId)\r\n              .update({ activities: activityCount })\r\n              .then(console.log(\"delete activity count\"));\r\n            window.location.reload(false);\r\n          });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport { Card, CardBody, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport DeletePost from \"./DeletePost\";\r\nlet name = \"\";\r\nlet deleteState = false;\r\nlet profileUrl = \"\";\r\nlet initial = \"\";\r\n\r\nconst ActivitiesSummary = ({ activity, profile, auth, users }) => {\r\n  if (auth.uid === activity.userId) {\r\n    deleteState = true;\r\n  } else {\r\n    deleteState = false;\r\n  }\r\n  if (users) {\r\n    users.forEach((user) => {\r\n      if (activity.userId === user.id) {\r\n        profileUrl = user.profileUrl;\r\n        name = user.firstName;\r\n        initial = user.lastName;\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"activity feed-entry mt-4\">\r\n        <CardBody>\r\n          <Row className=\"entry header\">\r\n            <Col md=\"2\" xs=\"2\">\r\n              <Link to={\"/runner/\" + activity.userId}>\r\n                <Avatar name={name + \" \" + initial} size=\"50\" round={true} src={profileUrl} />\r\n              </Link>\r\n            </Col>\r\n            <Col md=\"8\" xs=\"8\">\r\n              <div className=\"entry owner\">{name}</div>\r\n              <div className=\"entry timestamp\">{moment(activity.createdAt.toDate()).calendar()}</div>\r\n            </Col>\r\n            <Col md=\"2\" xs=\"2\">\r\n              {deleteState ? <DeletePost activity={activity} /> : null}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"entry-body\">\r\n            <Col md=\"2\" className=\"d-flex justify-content-center align-self-center\">\r\n              <h1 className=\"display-4\">\r\n                <i class=\"icon-iconpost\">\r\n                  <span class=\"path1\"></span>\r\n                  <span class=\"path2\"></span>\r\n                </i>\r\n              </h1>\r\n            </Col>\r\n            <Col md=\"10\">\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <h3 className=\"thai-font\">{activity.titleActivity}</h3>\r\n                </Col>\r\n                <Col md=\"12\">\r\n                  <Row>\r\n                    <Col md=\"4\" className=\"stat-list\">\r\n                      <div>Distance</div>\r\n                      <div>{activity.totalDistance} Km</div>\r\n                    </Col>\r\n                    <Col md=\"4\" className=\"stat-list\">\r\n                      <div>Pace</div>\r\n                      <div>{activity.averagePace} /Km</div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div>Time</div>\r\n                      <div>{activity.totalTime} Min</div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.firebase.profile,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ActivitiesSummary);\r\n","import React from \"react\";\r\nimport ActivitiesSummary from \"./ActivitiesSummary\";\r\nimport { Alert } from \"reactstrap\";\r\nconst ActivitiesList = ({ activities, users }) => {\r\n  if (!activities)\r\n    return (\r\n      <Alert color=\"danger\" className=\"text-center\">\r\n        Loading...\r\n      </Alert>\r\n    );\r\n  return (\r\n    <div className=\"activities-list-section\">\r\n      {activities &&\r\n        activities.map((activity) => {\r\n          return <ActivitiesSummary activity={activity} key={activity.id + Math.random()} users={users} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivitiesList;\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardFooter, CardBody, CardTitle, CardText, CardLink, CardSubtitle } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEventAction } from \"../store/actions/getEventAction\";\r\nclass Informations extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getEvent(\"date from information\");\r\n  };\r\n  render() {\r\n    const { eventData } = this.props;\r\n    if (eventData && eventData.length > 0) {\r\n      return (\r\n        <div>\r\n          <Card className=\"mt-5\">\r\n            <CardBody>\r\n              <CardTitle>\r\n                <p className=\"running-event-title\">Running Event</p>\r\n              </CardTitle>\r\n              <CardSubtitle>\r\n                {eventData ? (\r\n                  <p className=\"font-weight-bold text-center running-event-subtitle\">{eventData[0].title}</p>\r\n                ) : null}\r\n              </CardSubtitle>\r\n            </CardBody>\r\n            {eventData ? <img width=\"100%\" src={eventData[0].imageUrl} alt=\"runing\" /> : null}\r\n\r\n            <CardBody>\r\n              {eventData ? <CardText className=\"running-event-description\">{eventData[0].description}</CardText> : null}\r\n              {eventData && eventData[0].funRun ? (\r\n                <li className=\"mt-0 mb-0 running-event-categories\">Fun Run (5KM)</li>\r\n              ) : null}\r\n              {eventData && eventData[0].miniMarathon ? (\r\n                <li className=\"mt-0 mb-0 running-event-categories\">Mini Marathon (10KM)</li>\r\n              ) : null}\r\n              {eventData && eventData[0].halfMarathon ? (\r\n                <li className=\"mt-0 mb-0 running-event-categories\">Half Marathon (21KM)</li>\r\n              ) : null}\r\n              {eventData && eventData[0].marathon ? (\r\n                <li className=\"mt-0 mb-0 running-event-categories\">Marathon (42KM)</li>\r\n              ) : null}\r\n              {eventData ? (\r\n                <CardLink href={eventData[0].eventUrl} target=\"_blank\">\r\n                  <p className=\"mt-2 text-center mb-0\">More & Register</p>\r\n                </CardLink>\r\n              ) : null}\r\n            </CardBody>\r\n            <CardFooter className=\"text-center\">Runreana 2020</CardFooter>\r\n          </Card>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventData: state.eventReducer.events,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { getEvent: (date) => dispatch(getEventAction(date)) };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Informations);\r\n","export const getEventAction = (friendId) => {\r\n  let date = new Date();\r\n  let today = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n  let dateData = new Date(today);\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"events\")\r\n      .where(\"publicDate\", \">=\", dateData)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let events = [];\r\n        querySnapshot.forEach((event) => {\r\n          events.push(event.data());\r\n        });\r\n        dispatch({ type: \"GET_EVENT\", events });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { Row, Col } from \"reactstrap\";\r\nconst ActivityData = ({ activityData }) => {\r\n  return (\r\n    <Card className=\"activity feed-entry mt-2\">\r\n      <CardBody>\r\n        <Row className=\"entry-body\">\r\n          <Col md=\"2\" className=\"d-flex justify-content-center align-self-center\">\r\n            <i className=\"fas fa-running run-logo\"></i>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <h3>You're Stat</h3>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <Row>\r\n                  <Col md=\"4\" className=\"stat-list\">\r\n                    <div>Distance</div>\r\n                    <div>{activityData.totalDistance} Km</div>\r\n                  </Col>\r\n                  <Col md=\"4\" className=\"stat-list\">\r\n                    <div>Pace</div>\r\n                    <div>{activityData.averagePace} /Km</div>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <div>Time</div>\r\n                    <div>{activityData.totalTime} Min</div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ActivityData;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nconst Message = ({ msg }) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const onDismiss = () => setVisible(false);\r\n  return (\r\n    <Alert color=\"info\" isOpen={visible} toggle={onDismiss}>\r\n      {msg}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  msg: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { Form, FormGroup, Label, Input, Card, CardBody, Button, CustomInput, CardHeader, CardTitle } from \"reactstrap\";\r\nimport ActivityData from \"./ActivityData\";\r\nimport Message from \"./Message\";\r\nimport { connect } from \"react-redux\";\r\nimport { createActivity } from \"../store/actions/activityAction\";\r\nclass UploadTest extends Component {\r\n  state = {\r\n    titleActivity: null,\r\n    totalTime: null,\r\n    totalDistance: null,\r\n    averagePace: null,\r\n    averageElevation: null,\r\n    totalCalories: null,\r\n    averageHr: null,\r\n    averageCadence: null,\r\n  };\r\n  handelFile = (e) => {\r\n    let file = e.target.files[0];\r\n    Papa.parse(file, {\r\n      header: true,\r\n      complete: this.updateData,\r\n    });\r\n  };\r\n\r\n  updateData = (result) => {\r\n    let data = result.data;\r\n    let count = data.length;\r\n    let summary = data[count - 1];\r\n    this.setState({\r\n      totalTime: summary[\"Time\"],\r\n      totalDistance: summary[\"Distance\"],\r\n      averagePace: summary[\"Avg Pace\"],\r\n      averageElevation: summary[\"Elev Gain\"],\r\n      totalCalories: summary[\"Calories\"],\r\n      averageHr: summary[\"Avg HR\"],\r\n      averageCadence: summary[\"Avg Run Cadence\"],\r\n    });\r\n  };\r\n  handelTitleChange = (e) => {\r\n    this.setState({ titleActivity: e.target.value });\r\n  };\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createActivity(this.state);\r\n    document.getElementById(\"create-course-form\").reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardHeader id=\"test\">Post</CardHeader>\r\n          <CardBody className=\"upload-activity\">\r\n            <CardTitle>\r\n              <h2>Upload Activity</h2>\r\n            </CardTitle>\r\n            <Form onSubmit={this.handelSubmit} id=\"create-course-form\">\r\n              <FormGroup>\r\n                <Label for=\"titleActivity\">Title Activity</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"title-activity\"\r\n                  id=\"titleActivity\"\r\n                  placeholder=\"Bang Khun Running\"\r\n                  required\r\n                  onChange={this.handelTitleChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label for=\"FileBrowser\">Upload</Label>\r\n                <CustomInput\r\n                  type=\"file\"\r\n                  id=\"FileBrowser\"\r\n                  name=\"customFile\"\r\n                  label=\"activity.csv\"\r\n                  onChange={this.handelFile}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              {this.state.totalTime ? <Message msg={\"Upload Completed\"} /> : null}\r\n              {this.state.totalTime ? <ActivityData activityData={this.state} /> : null}\r\n              <Button className=\"mt-2 float-right\">Post</Button>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createActivity: (activity) => dispatch(createActivity(activity)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(UploadTest);\r\n","export const friendAction = (userId) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"runrena_friend\")\r\n      .doc(userId)\r\n      .collection(\"followers\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let friend = [userId];\r\n        querySnapshot.forEach((user) => {\r\n          if (user.data().followered === true) {\r\n            friend.push(user.id);\r\n          }\r\n        });\r\n        dispatch({ type: \"RUNRENA_FRIEND\", friend });\r\n      });\r\n  };\r\n};\r\n","export const limitActivityQuery = (data) => {\r\n  console.log(\"limitActivityQuery -> data\", data);\r\n\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    dispatch({ type: \"LIMIT_QUERY\", data });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { friendAction } from \"../store/actions/friendAction\";\r\nimport { limitActivityQuery } from \"../store/actions/limitActivityQuery\";\r\nclass High extends Component {\r\n  componentDidMount() {\r\n    this.props.friendAction(this.props.auth.uid);\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/\" />;\r\n    return <div>{this.props.friend ? <Dashboard name={this.props.friend} /> : null}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    friend: state.friend.friend,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    friendAction: (userId) => dispatch(friendAction(userId)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(High);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../store/actions/authAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handelChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/runrena\" />;\r\n    return (\r\n      <div className=\"signin-page\">\r\n        <Form className=\"form-signin\" onSubmit={this.handelSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={this.handelChange} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" onChange={this.handelChange} />\r\n          </FormGroup>\r\n          <Button className=\"btn-block\">Submit</Button>\r\n          <div>{authError ? <p>{authError}</p> : null}</div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToprops = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\nexport default connect(mapStateToprops, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from \"reactstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../store/actions/authAction\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    weight: null,\r\n    height: null,\r\n    gender: \"Male\",\r\n    age: null\r\n  };\r\n  handelChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n    console.log(this.state);\r\n  };\r\n  handelSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"signin-page\">\r\n        <Form className=\"form-signin\" onSubmit={this.handelSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={this.handelChange} required />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handelChange}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"firstName\">First Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"password\"\r\n                  id=\"firstName\"\r\n                  placeholder=\"First Name\"\r\n                  onChange={this.handelChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"lastName\">Last Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"password\"\r\n                  id=\"lastName\"\r\n                  placeholder=\"Last Name\"\r\n                  onChange={this.handelChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"weight\">Weight</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"weight\"\r\n                  id=\"weight\"\r\n                  placeholder=\"Weight(Kg)\"\r\n                  min=\"10\"\r\n                  onChange={this.handelChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"height\">Height</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"height\"\r\n                  id=\"height\"\r\n                  placeholder=\"Height(Cm)\"\r\n                  onChange={this.handelChange}\r\n                  min=\"50\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"gender\">Gender</Label>\r\n                <Input type=\"select\" name=\"gender\" id=\"gender\" onChange={this.handelChange} required>\r\n                  <option>Male</option>\r\n                  <option>Female</option>\r\n                  <option>Others</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"age\">Age</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  id=\"age\"\r\n                  placeholder=\"Age\"\r\n                  onChange={this.handelChange}\r\n                  min=\"7\"\r\n                  max=\"100\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <div>{authError ? <p>{authError}</p> : null}</div>\r\n          <Button className=\"btn-block\">Submit</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport { Card, Row, Col, Badge } from \"reactstrap\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { followerAction } from \"../store/actions/followerAction\";\r\nimport { followerCountAction } from \"../store/actions/followerCountAction\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nlet followData = {};\r\nlet authState = true;\r\nclass UserProfile extends Component {\r\n  state = {\r\n    userId: this.props.userId,\r\n    followerProfile: this.props.followerProfile,\r\n    followerId: this.props.followerId,\r\n    followedState: this.props.followedState.followerState,\r\n    activitiesCount: this.props.activities.length,\r\n  };\r\n\r\n  handelFollowerClicked = (e) => {\r\n    let followedStateInvert = !this.state.followedState;\r\n    this.setState({ followedState: followedStateInvert });\r\n    let userId = this.state.userId;\r\n    let followerId = this.state.followerId;\r\n    let data = { userId: userId, followerId: followerId, followerState: followedStateInvert };\r\n    this.props.followerAction(data);\r\n    this.props.followerCountAction(data);\r\n  };\r\n  render() {\r\n    let followData = this.state.followerProfile;\r\n    if (this.state.userId === this.state.followerId) {\r\n      authState = false;\r\n    }\r\n    followData.forEach((data) => {\r\n      if (data.id === this.state.followerId) {\r\n        followData = data;\r\n      }\r\n    });\r\n    const { profileData, profile } = this.props;\r\n    return (\r\n      <div className=\"container dashboard\">\r\n        <Card>\r\n          <Row className=\"text-center align-items-center\">\r\n            <Col>\r\n              <div className=\"mt-2\">\r\n                {profileData[\"profileUrl\"].length <= 2 ? (\r\n                  <Avatar\r\n                    className=\"mb-2\"\r\n                    name={profileData[\"firstName\"] + \" \" + profileData[\"lastName\"]}\r\n                    size=\"100\"\r\n                    round={true}\r\n                  />\r\n                ) : null}\r\n\r\n                {profileData[\"profileUrl\"].length > 2 ? (\r\n                  <Avatar\r\n                    className=\"mb-2\"\r\n                    name={profileData[\"firstName\"] + \" \" + profileData[\"lastName\"]}\r\n                    size=\"100\"\r\n                    round={true}\r\n                    src={profileData[\"profileUrl\"]}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n              {this.state.followerProfile ? <h5>{followData.firstName}</h5> : null}\r\n              {this.state.followedState && authState ? (\r\n                <Button color=\"primary\" size=\"sm\" className=\"rounded-70 mb-3\" onClick={this.handelFollowerClicked}>\r\n                  unfollow\r\n                </Button>\r\n              ) : null}\r\n              {!this.state.followedState && authState ? (\r\n                <Button color=\"primary\" size=\"sm\" className=\"rounded-70 mb-3\" onClick={this.handelFollowerClicked}>\r\n                  follow\r\n                </Button>\r\n              ) : null}\r\n            </Col>\r\n            <Col>\r\n              <Row className=\"mt-3\">\r\n                <Col md=\"4\" className=\"stat-list px-0\">\r\n                  <div className=\"font-weight-bold\">Follwers</div>\r\n                  <p>{profileData[\"followers\"]}</p>\r\n                </Col>\r\n                <Col md=\"4\" className=\"stat-list px-0\">\r\n                  <div className=\"font-weight-bold\">Follwing</div>\r\n                  <p>{profileData[\"following\"]}</p>\r\n                </Col>\r\n                <Col md=\"4\" xs=\"12\" className=\"px-0\">\r\n                  <div className=\"font-weight-bold\">Activities</div>\r\n                  <p>{profileData[\"activities\"]}</p>\r\n                </Col>\r\n                <Col md=\"12\" xs=\"12\" className=\"mt-3\">\r\n                  <h5>\r\n                    {this.state.followerProfile ? (\r\n                      <Badge color=\"dark\">\r\n                        <p className=\"quote-text\">{followData.quote}</p>\r\n                      </Badge>\r\n                    ) : null}\r\n                  </h5>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"font-weight-bold\">Runrena Score</div>\r\n              <div className=\"display-4\">{profileData[\"activities\"]}</div>\r\n              <div>total activities</div>\r\n            </Col>\r\n            <Col className=\"mt-0\">\r\n              <Link to={\"/profile/\"} className=\"mt-0\">\r\n                <Button color=\"secondary\" size=\"sm\" className=\"mt-0\">\r\n                  <i className=\"icon-pencil2\"></i>\r\n                </Button>\r\n                <h6>\r\n                  <Badge className=\"mt-0\" color=\"secondary\">\r\n                    Edit Profile\r\n                  </Badge>\r\n                </h6>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    followerAction: (data) => dispatch(followerAction(data)),\r\n    followerCountAction: (data) => dispatch(followerCountAction(data)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.firebase.profile,\r\n    auth: state.firebase.auth,\r\n    profileData: state.firestore.ordered.users[0],\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect((props) => {\r\n    return [{ collection: \"users\", where: [[\"userId\", \"in\", [props.followerId]]] }];\r\n  })\r\n)(UserProfile);\r\n","export const followerAction = (data) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"runrena_friend\")\r\n      .doc(data.userId)\r\n      .collection(\"followers\")\r\n      .doc(data.followerId)\r\n      .set({\r\n        followered: data.followerState,\r\n      })\r\n      .then(() => {\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(data.userId)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            let followerCount = querySnapshot.data()[\"following\"];\r\n            if (data.followerState === true) {\r\n              followerCount = followerCount + 1;\r\n            } else {\r\n              followerCount = followerCount - 1;\r\n            }\r\n            firestore\r\n              .collection(\"users\")\r\n              .doc(data.userId)\r\n              .update({ following: followerCount })\r\n              .then(console.log(\"done\"));\r\n          });\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n};\r\n","export const followerCountAction = (data) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"runrena_friend\")\r\n      .doc(data.followerId)\r\n      .collection(\"friend_followers\")\r\n      .doc(data.userId)\r\n      .set({ followed: data.followerState })\r\n      .then(() => {\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(data.followerId)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            let followerCount = querySnapshot.data()[\"followers\"];\r\n            if (data.followerState === true) {\r\n              followerCount = followerCount + 1;\r\n            } else {\r\n              followerCount = followerCount - 1;\r\n            }\r\n            firestore.collection(\"users\").doc(data.followerId).update({ followers: followerCount }).then();\r\n          });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst data = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: \"Beat\",\r\n      backgroundColor: [\r\n        \"#4d4c7d\",\r\n        \"#fb7b6b\",\r\n        \"#d7385e\",\r\n        \"#4d4c7d\",\r\n        \"#fb7b6b\",\r\n        \"#d7385e\",\r\n        \"#4d4c7d\",\r\n        \"#fb7b6b\",\r\n        \"#d7385e\",\r\n      ],\r\n      highlightFill: \"yellow\",\r\n      borderColor: \"white\",\r\n      borderWidth: 2,\r\n      barPercentage: 0.4,\r\n      data: [],\r\n    },\r\n  ],\r\n};\r\n\r\nclass ChartCompare extends Component {\r\n  state = {\r\n    activitiesData: this.props.activities,\r\n    friendFollowerData: this.props.friendFollowerData,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ activitiesData: nextProps.activities });\r\n  }\r\n  render() {\r\n    const { activitiesData, friendFollowerData } = this.state;\r\n\r\n    var result = [];\r\n    let userId = [];\r\n    let totalDistance = [];\r\n    activitiesData.reduce(function (res, value) {\r\n      if (!res[value.userId]) {\r\n        res[value.userId] = { userId: value.userId, totalDistance: 0 };\r\n        result.push(res[value.userId]);\r\n      }\r\n      res[value.userId].totalDistance += value.totalDistance;\r\n      return res;\r\n    }, {});\r\n\r\n    result.forEach((activity) => {\r\n      friendFollowerData.forEach((data) => {\r\n        if (activity.userId === data.userId) {\r\n          userId.push(data.firstName);\r\n          totalDistance.push(activity.totalDistance.toFixed(2));\r\n        }\r\n      });\r\n    });\r\n    data[\"labels\"] = userId;\r\n    data[\"datasets\"][0].data = totalDistance;\r\n    return (\r\n      <div className=\"pl-5 pr-5\">\r\n        <Bar\r\n          data={data}\r\n          width={10}\r\n          height={300}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            tooltips: {\r\n              displayColors: false,\r\n              titleFontSize: 16,\r\n              bodyFontSize: 14,\r\n              xPadding: 10,\r\n              yPadding: 10,\r\n              callbacks: {\r\n                label: (tooltipItem, data) => {\r\n                  return `${tooltipItem.value} Km`;\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartCompare;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Row, Col, CardHeader } from \"reactstrap\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport ChartCompare from \"./ChartCompare\";\r\nimport { connect } from \"react-redux\";\r\nimport { activityStat } from \"../store/actions/activityStatAction\";\r\nimport { userDataAction } from \"../store/actions/userDataAction\";\r\nimport { queryByTime } from \"../store/actions/queryByTime\";\r\n\r\nclass Overview extends Component {\r\n  state = {\r\n    selectedDay: null,\r\n  };\r\n\r\n  handleDayChange = (selectedDay, modifiers, dayPickerInput) => {\r\n    const input = dayPickerInput.getInput();\r\n    let dateTimeAndFriendList = [this.props.friend];\r\n    dateTimeAndFriendList.push(input.value);\r\n    this.props.queryByTime(dateTimeAndFriendList);\r\n  };\r\n  componentWillMount() {\r\n    this.props.friendData(this.props.friend);\r\n  }\r\n  componentDidMount() {\r\n    this.props.activityData(this.props.friend);\r\n    //this.props.friendData(this.props.friend);\r\n    var today = new Date();\r\n    var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n    let dateTimeAndFriendList = [this.props.friend];\r\n    dateTimeAndFriendList.push(date);\r\n    this.props.queryByTime(dateTimeAndFriendList);\r\n  }\r\n\r\n  render() {\r\n    const { activities, friend, friendFollowerData, activityByDate } = this.props;\r\n    const { selectedDay, isDisabled, isEmpty } = this.state;\r\n    return (\r\n      <div className=\"container mt-2\">\r\n        <Card>\r\n          <CardHeader>Overview</CardHeader>\r\n          <Row className=\"align-items-center\">\r\n            <Col md=\"9\"></Col>\r\n            <Col md=\"3\" className=\"text-center\">\r\n              <div className=\"mt-2\">\r\n                <DayPickerInput\r\n                  value={selectedDay}\r\n                  onDayChange={this.handleDayChange}\r\n                  dayPickerProps={{\r\n                    selectedDays: selectedDay,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              {activityByDate ? (\r\n                <ChartCompare activities={activityByDate} friend={friend} friendFollowerData={friendFollowerData} />\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    activityData: (friendList) => dispatch(activityStat(friendList)),\r\n    friendData: (friendList) => dispatch(userDataAction(friendList)),\r\n    queryByTime: (dateTimeAndFriendList) => dispatch(queryByTime(dateTimeAndFriendList)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activities: state.activitiesStat.activityStat,\r\n    friendFollowerData: state.userData.users,\r\n    activityByDate: state.activityByDate.activitiesByDate,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);\r\n","export const activityStat = (friendId) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"activities\")\r\n      .where(\"userId\", \"in\", friendId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let activities = [];\r\n        querySnapshot.forEach((activity) => {\r\n          activities.push(activity.data());\r\n        });\r\n        dispatch({ type: \"ACTIVITY_STAT\", activities });\r\n      });\r\n  };\r\n};\r\n\r\nexport const activityPost = (friendId) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"activities\")\r\n      .where(\"userId\", \"in\", friendId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let activities = [];\r\n        querySnapshot.forEach((activity) => {\r\n          let newData = {};\r\n          newData = activity.data();\r\n          newData[\"activityId\"] = activity.id;\r\n          console.log(\"activityPost -> newData\", newData);\r\n          activities.push(newData);\r\n        });\r\n\r\n        dispatch({ type: \"ACTIVITY_POST\", activities });\r\n      });\r\n  };\r\n};\r\n","export const userDataAction = (friendId) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"users\")\r\n      .where(\"userId\", \"in\", friendId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let users = [];\r\n        querySnapshot.forEach((user) => {\r\n          users.push(user.data());\r\n        });\r\n        dispatch({ type: \"GET_USERS_DATA\", users });\r\n      });\r\n  };\r\n};\r\n","export const queryByTime = (dateTimeAndFriendList) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    let start = new Date(dateTimeAndFriendList[1]);\r\n    var end = new Date(start);\r\n    end.setDate(end.getDate() + 1);\r\n    firestore\r\n      .collection(\"activities\")\r\n      .where(\"userId\", \"in\", dateTimeAndFriendList[0])\r\n      .where(\"createdAt\", \">\", start)\r\n      .where(\"createdAt\", \"<\", end)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let activities = [];\r\n        querySnapshot.forEach((activity) => {\r\n          activities.push(activity.data());\r\n        });\r\n        dispatch({ type: \"GET_ACTIVITY_BY_DAY\", activities });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { queryActivitySummary } from \"../store/actions/queryActivitySummary\";\r\nclass TableStat extends Component {\r\n  state = {\r\n    userId: this.props.userId,\r\n    averageStat: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.queryActivitySummary(this.props.userId);\r\n  }\r\n  render() {\r\n    const { activities } = this.props;\r\n    let averageStat;\r\n    let dataFunRun = [];\r\n    let dataInThisMonth = [];\r\n    const average = (activities) => {\r\n      let distanceSum = 0;\r\n      let timeSum = 0;\r\n      let averageStat = {};\r\n      let thisMonth = new Date();\r\n      let min = 0;\r\n      let second = 0;\r\n      thisMonth = thisMonth.getMonth();\r\n      activities.forEach((activity) => {\r\n        let timeStamp = activity[\"createdAt\"].seconds;\r\n        let date = new Date(timeStamp * 1000);\r\n        if (date.getMonth() === thisMonth) {\r\n          dataInThisMonth.push(activity);\r\n        }\r\n        if (activity[\"totalDistance\"] >= 5 && activity[\"totalDistance\"] <= 5.5) {\r\n          dataFunRun.push(activity);\r\n        }\r\n      });\r\n      averageStat[\"runningCount\"] = activities.length;\r\n      activities.forEach((activity) => {\r\n        distanceSum = distanceSum + activity.totalDistance;\r\n        timeSum = timeSum + activity.totalTime;\r\n        let time = activity.totalTime.toString();\r\n        let array = time.split(\".\", -1);\r\n        min = min + parseInt(array[0]);\r\n        second = second + parseInt(array[1]);\r\n      });\r\n      min = min + Math.floor(second / 60);\r\n      second = second % 60;\r\n      let totalTime = min.toString() + \".\" + second.toString();\r\n      averageStat[\"Time\"] = totalTime;\r\n      averageStat[\"totalDistance\"] = distanceSum;\r\n      return averageStat;\r\n    };\r\n    if (activities) {\r\n      averageStat = average(activities);\r\n    }\r\n    if (dataFunRun.length > 0) {\r\n      let min = dataFunRun[0].totalTime;\r\n      for (let i = 1, len = dataFunRun.length; i < len; i++) {\r\n        let v = dataFunRun[i].totalTime;\r\n        min = v < min ? v : min;\r\n      }\r\n      averageStat[\"bestFunRun\"] = min;\r\n    }\r\n    if (dataInThisMonth.length > 0) {\r\n      let timeSum = 0;\r\n      let distanceSum = 0;\r\n      let elevGainSum = 0;\r\n      let monthCount = dataInThisMonth.length;\r\n      dataInThisMonth.forEach((activity) => {\r\n        distanceSum = distanceSum + activity.totalDistance;\r\n        timeSum = timeSum + activity.totalTime;\r\n        elevGainSum = elevGainSum + activity.averageElevation;\r\n      });\r\n      averageStat[\"Elevation\"] = elevGainSum / 4;\r\n      averageStat[\"avgDistance\"] = distanceSum / 4;\r\n      averageStat[\"avgTime\"] = timeSum / 4;\r\n      averageStat[\"runPerMonth\"] = monthCount;\r\n    }\r\n    return (\r\n      <div>\r\n        <Table size=\"sm\">\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\" className=\"text-info\">\r\n                This Month Summary\r\n              </th>\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Avg Distance / Week</th>\r\n              {typeof averageStat != \"undefined\" && typeof averageStat.avgDistance != \"undefined\" ? (\r\n                <td>{averageStat.avgDistance.toFixed(2)} Km</td>\r\n              ) : (\r\n                <td>loading</td>\r\n              )}\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Avg Time / Week</th>\r\n              {typeof averageStat != \"undefined\" && typeof averageStat.avgTime != \"undefined\" ? (\r\n                <td>{averageStat.avgTime.toFixed(2)} min</td>\r\n              ) : (\r\n                <td>loading</td>\r\n              )}\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Total Runs</th>\r\n              {typeof averageStat != \"undefined\" && typeof averageStat.runPerMonth != \"undefined\" ? (\r\n                <td>{averageStat.runPerMonth} runs</td>\r\n              ) : (\r\n                <td>loading</td>\r\n              )}\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\" className=\"text-info\">\r\n                Estimated Best Efforts\r\n              </th>\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Fun Run (5K)</th>\r\n              {averageStat ? <td>{averageStat.bestFunRun} Mins</td> : <td>loading</td>}\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Time</th>\r\n              {averageStat ? <td>{averageStat.Time} mins</td> : <td>loading</td>}\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\" className=\"text-info\">\r\n                All-Time\r\n              </th>\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Run</th>\r\n              {averageStat ? <td>{averageStat.runningCount}</td> : <td>loading</td>}\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Distance</th>\r\n              {averageStat ? <td>{averageStat.totalDistance.toFixed(2)} km</td> : <td>loading</td>}\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activities: state.querySummaryReducer.summaryActivity,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    queryActivitySummary: (userId) => dispatch(queryActivitySummary(userId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableStat);\r\n","export const queryActivitySummary = (userId) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"activities\")\r\n      .where(\"userId\", \"in\", [userId])\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let activities = [];\r\n        querySnapshot.forEach((activity) => {\r\n          activities.push(activity.data());\r\n          //console.log(activity.data());\r\n        });\r\n        dispatch({ type: \"QUERY_SUMMARY\", activities });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nclass TableDayActivity extends Component {\r\n  state = {\r\n    activities: this.props.activityUserByDate,\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ activities: nextProps.activityUserByDate });\r\n  }\r\n  render() {\r\n    const { activities } = this.state;\r\n    return (\r\n      <div>\r\n        <h5 className=\"text-center\">Activity Summary</h5>\r\n        <Table striped className=\"table-date-stat table-striped\">\r\n          <thead className=\"table-date-stat\">\r\n            <tr className=\"text-center\">\r\n              <th>Title</th>\r\n              <th>Distance</th>\r\n              <th>Pace</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-left\">\r\n            {activities &&\r\n              activities.map((activity) => {\r\n                return (\r\n                  <tr key={Math.random()}>\r\n                    <td>{activity.titleActivity}</td>\r\n                    <td>{activity.totalDistance}</td>\r\n                    <td>{activity.averagePace}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableDayActivity;\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardBody, Row, Col, CardHeader } from \"reactstrap\";\r\nimport TableStat from \"./TableStat\";\r\nimport TableDayActivity from \"./TableDayActivity\";\r\nimport Helmet from \"react-helmet\";\r\nimport DayPicker, { DateUtils } from \"react-day-picker\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { getUserActivityByDateAction } from \"../store/actions/getUserActivityByDateAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass MyStat extends Component {\r\n  static defaultProps = {\r\n    numberOfMonths: 1,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDayClick = this.handleDayClick.bind(this);\r\n    this.handleResetClick = this.handleResetClick.bind(this);\r\n    this.state = this.getInitialState();\r\n  }\r\n\r\n  getInitialState = () => {\r\n    var today = new Date();\r\n    return {\r\n      from: null,\r\n      to: null,\r\n    };\r\n  };\r\n\r\n  handleDayClick = (day) => {\r\n    const range = DateUtils.addDayToRange(day, this.state);\r\n    this.setState(range);\r\n    let dateTimeAndUserId = [this.props.userId];\r\n    dateTimeAndUserId.push(range);\r\n    this.props.getActivityUserByDate(dateTimeAndUserId);\r\n  };\r\n  componentDidMount() {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n    let todayTimeStamp = new Date(date);\r\n    let dateTimeAndUserId = [this.props.userId];\r\n    let dateData = { from: todayTimeStamp, to: null };\r\n    dateTimeAndUserId.push(dateData);\r\n    let range = { from: todayTimeStamp, to: todayTimeStamp };\r\n    this.setState(range);\r\n    this.props.getActivityUserByDate(dateTimeAndUserId);\r\n  }\r\n  handleResetClick() {\r\n    this.setState(this.getInitialState());\r\n  }\r\n  render() {\r\n    const { userId } = this.props;\r\n    const { from, to } = this.state;\r\n    const modifiers = { start: from, end: to };\r\n    return (\r\n      <div className=\"container mt-2 mb-5\">\r\n        <Card>\r\n          <CardHeader>My Stat</CardHeader>\r\n          <CardBody>\r\n            <Row className=\"align-items-center\">\r\n              <Col md=\"3\">\r\n                <div className=\"\">\r\n                  <DayPicker\r\n                    className=\"Selectable\"\r\n                    numberOfMonths={this.props.numberOfMonths}\r\n                    selectedDays={[from, { from, to }]}\r\n                    modifiers={modifiers}\r\n                    onDayClick={this.handleDayClick}\r\n                  />\r\n                  <Helmet>\r\n                    <style>{`\r\n                            .Selectable .DayPicker-Day--selected:not(.DayPicker-Day--start):not(.DayPicker-Day--end):not(.DayPicker-Day--outside) {\r\n                              background-color: #f0f8ff !important;\r\n                              color: #4a90e2;\r\n                            }\r\n                            .Selectable .DayPicker-Day {\r\n                              border-radius: 0 !important;\r\n                            }\r\n                            .Selectable .DayPicker-Day--start {\r\n                              border-top-left-radius: 50% !important;\r\n                              border-bottom-left-radius: 50% !important;\r\n                            }\r\n                            .Selectable .DayPicker-Day--end {\r\n                              border-top-right-radius: 50% !important;\r\n                              border-bottom-right-radius: 50% !important;\r\n                            }\r\n                          `}</style>\r\n                  </Helmet>\r\n                </div>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <div className=\"\">\r\n                  {this.props.activityUserByDate ? (\r\n                    <TableDayActivity\r\n                      className=\"mb-6\"\r\n                      activityUserByDate={this.props.activityUserByDate}\r\n                      date={this.state}\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n              </Col>\r\n              <Col md=\"5\">\r\n                <TableStat userId={userId} />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    userId: props.userId,\r\n    activityUserByDate: state.activityUserByDate.activitiesUserByDate,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { getActivityUserByDate: (dateAndUserId) => dispatch(getUserActivityByDateAction(dateAndUserId)) };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyStat);\r\n","export const getUserActivityByDateAction = (dateTimeAndUserId) => {\r\n  let userId = dateTimeAndUserId[0];\r\n  let from = dateTimeAndUserId[1][\"from\"];\r\n  let to = dateTimeAndUserId[1][\"to\"];\r\n  let start = null;\r\n  let end = null;\r\n  let dateStart = null;\r\n  let dateEnd = null;\r\n\r\n  if (from instanceof Date) {\r\n    start = from.toLocaleDateString();\r\n    dateStart = new Date(start);\r\n  }\r\n  if (to != null) {\r\n    end = to.toLocaleDateString();\r\n    dateEnd = new Date(end);\r\n  }\r\n\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    if (dateStart && dateEnd) {\r\n      if (dateStart.toLocaleDateString() == dateEnd.toLocaleDateString()) {\r\n        let newDate = new Date(dateStart);\r\n        newDate.setDate(dateStart.getDate() + 1);\r\n        firestore\r\n          .collection(\"activities\")\r\n          .where(\"userId\", \"==\", userId)\r\n          .where(\"createdAt\", \">\", dateStart)\r\n          .where(\"createdAt\", \"<\", newDate)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            let activities = [];\r\n            querySnapshot.forEach((activity) => {\r\n              activities.push(activity.data());\r\n            });\r\n            dispatch({ type: \"GET_ACTIVITY_USER_BY_DATE\", activities });\r\n          });\r\n      } else {\r\n        let newDate = new Date(dateEnd);\r\n        newDate.setDate(newDate.getDate() + 1);\r\n        firestore\r\n          .collection(\"activities\")\r\n          .where(\"userId\", \"==\", userId)\r\n          .where(\"createdAt\", \">\", dateStart)\r\n          .where(\"createdAt\", \"<=\", newDate)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            let activities = [];\r\n            querySnapshot.forEach((activity) => {\r\n              activities.push(activity.data());\r\n            });\r\n            dispatch({ type: \"GET_ACTIVITY_USER_BY_DATE\", activities });\r\n          });\r\n      }\r\n    } else if (dateStart) {\r\n      let newDate = new Date(dateStart);\r\n      newDate.setDate(dateStart.getDate() + 1);\r\n      firestore\r\n        .collection(\"activities\")\r\n        .where(\"userId\", \"==\", userId)\r\n        .where(\"createdAt\", \">\", dateStart)\r\n        .where(\"createdAt\", \"<\", newDate)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          let activities = [];\r\n          querySnapshot.forEach((activity) => {\r\n            activities.push(activity.data());\r\n          });\r\n          dispatch({ type: \"GET_ACTIVITY_USER_BY_DATE\", activities });\r\n        });\r\n    } else {\r\n      console.log(\"CAN'T_QUERY_BY_DATE\");\r\n    }\r\n\r\n    // const firestore = getFirestore();\r\n    // firestore\r\n    //   .collection(\"activities\")\r\n    //   .where(\"userId\", \"in\", dateTimeAndFriendList[0])\r\n    //   .where(\"createdAt\", \">\", start)\r\n    //   .where(\"createdAt\", \"<\", end)\r\n    //   .get()\r\n    //   .then((querySnapshot) => {\r\n    //     let activities = [];\r\n    //     querySnapshot.forEach((activity) => {\r\n    //       activities.push(activity.data());\r\n    //     });\r\n    //     dispatch({ type: \"GET_ACTIVITY_BY_DAY\", activities });\r\n    //   });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport Overview from \"./Overview\";\r\nimport MyStat from \"./MyStat\";\r\nimport { friendAction } from \"../store/actions/friendAction\";\r\nclass UserDashboard extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    this.props.friendList(this.props.auth.uid);\r\n  }\r\n  render() {\r\n    const { followerProfile, activities, auth, followerId, followedStateData, friend } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/\" />;\r\n    let followerData;\r\n\r\n    if (followedStateData !== undefined) {\r\n      if (\"followers\" in followedStateData[0]) {\r\n        if (followedStateData[0][\"followers\"].length !== 0) {\r\n          followerData = { followerState: followedStateData[0][\"followers\"][0][\"followered\"] };\r\n        } else {\r\n          followerData = { followerState: false };\r\n        }\r\n      } else {\r\n        followerData = { followerState: false };\r\n      }\r\n    } else {\r\n    }\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div>\r\n        {followerProfile && auth && followerId && followerProfile && activities && followerData && auth ? (\r\n          <UserProfile\r\n            userId={auth.uid}\r\n            followedState={followerData}\r\n            followerId={followerId}\r\n            followerProfile={followerProfile}\r\n            activities={activities}\r\n          />\r\n        ) : null}\r\n        {friend && auth.uid === followerId ? <Overview friend={friend} /> : null}\r\n        <MyStat activities={activities} userId={followerId} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const userId = ownProps.match.params.id;\r\n  return {\r\n    followerId: userId,\r\n    followerProfile: state.firestore.ordered.users,\r\n    activities: state.firestore.ordered.activities,\r\n    auth: state.firebase.auth,\r\n    followedStateData: state.firestore.ordered.runrena_friend,\r\n    friend: state.friend.friend, // frindList of follow\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    friendList: (userId) => dispatch(friendAction(userId)),\r\n  };\r\n};\r\nexport default compose(\r\n  firebaseConnect(), // connect to firebase because what to auth uid\r\n  connect(mapStateToProps, mapDispatchToProps), // map statetoprop\r\n  firestoreConnect((props) => [\r\n    // have props value that get from firebase.auth.uid\r\n    {\r\n      collection: \"activities\",\r\n      where: [[\"userId\", \"==\", props.followerId]],\r\n    },\r\n    {\r\n      collection: \"users\",\r\n      doc: props.followerId,\r\n    },\r\n    {\r\n      collection: \"runrena_friend\",\r\n      doc: props.auth.uid,\r\n      subcollections: [{ collection: \"followers\", doc: props.followerId }],\r\n    },\r\n  ])\r\n)(UserDashboard);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Row, Col, CardHeader, Input, FormGroup, Button, Form } from \"reactstrap\";\r\nimport { Table } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { profileUpdate } from \"../store/actions/profileAction\";\r\nimport Avatar from \"react-avatar\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass MyProfile extends Component {\r\n  state = {\r\n    firstName: this.props.profile.firstName,\r\n    lastName: this.props.profile.lastName,\r\n    gender: this.props.profile.gender,\r\n    height: this.props.profile.height,\r\n    weight: this.props.profile.weight,\r\n    quote: this.props.profile.quote,\r\n    profileUrl: this.props.auth.profileUrl,\r\n    nameClicked: false,\r\n    lastNameClicked: false,\r\n    quoteClicked: false,\r\n    weightClicked: false,\r\n    heightClicked: false,\r\n    genderClicked: false,\r\n    profileClicked: false,\r\n    authId: this.props.auth,\r\n  };\r\n  handleClick = (e) => {\r\n    this.setState({ nameClicked: true });\r\n    console.log(\"click\");\r\n  };\r\n  handelClickLastName = (e) => {\r\n    this.setState({ lastNameClicked: true });\r\n  };\r\n  handelChangeFirstName = (e) => {\r\n    this.setState({ firstName: e.target.value });\r\n  };\r\n  handleChangeLastName = (e) => {\r\n    this.setState({ lastName: e.target.value });\r\n  };\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ nameClicked: false });\r\n    this.props.profileUpdate(this.state);\r\n  };\r\n  handelSubmitLastName = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ lastNameClicked: false });\r\n  };\r\n\r\n  handleClickQuote = (e) => {\r\n    this.setState({ quoteClicked: true });\r\n  };\r\n  handelSubmitQuote = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ quoteClicked: false });\r\n    this.props.profileUpdate(this.state);\r\n  };\r\n\r\n  handelChangeQuote = (e) => {\r\n    this.setState({ quote: e.target.value });\r\n  };\r\n  // edit weight\r\n  handelClickWeight = (e) => {\r\n    this.setState({ weightClicked: true });\r\n  };\r\n  handelChangeWeight = (e) => {\r\n    this.setState({ weight: e.target.value });\r\n  };\r\n  handelSubmitWeight = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ weightClicked: false });\r\n    this.props.profileUpdate(this.state);\r\n  };\r\n\r\n  //edit height\r\n  handelClickHeight = (e) => {\r\n    this.setState({ heightClicked: true });\r\n  };\r\n  handelChangeHeight = (e) => {\r\n    this.setState({ height: e.target.value });\r\n  };\r\n  handelSubmitHeight = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ heightClicked: false });\r\n    this.props.profileUpdate(this.state);\r\n  };\r\n  //gender\r\n  handelClickGender = (e) => {\r\n    this.setState({ genderClicked: true });\r\n  };\r\n  handelChangeGender = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ gender: e.target.value });\r\n  };\r\n\r\n  handelSubmitGender = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ genderClicked: false });\r\n    this.props.profileUpdate(this.state);\r\n  };\r\n\r\n  handelClickProfile = (e) => {\r\n    this.setState({ profileClicked: true });\r\n  };\r\n  handelChangeProfile = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ profileUrl: e.target.value });\r\n  };\r\n\r\n  handelSubmitProfile = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ profileClicked: false });\r\n    this.props.profileUpdate(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authCheck } = this.props;\r\n    if (!authCheck.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container dashboard\">\r\n        <Row>\r\n          <Col md=\"2\">\r\n            <Card>\r\n              <CardHeader className=\"text-center\">{this.state.firstName}</CardHeader>\r\n            </Card>\r\n          </Col>\r\n          <Col md=\"8\">\r\n            <h2>My Profile</h2>\r\n            <hr />\r\n            <p>Current Photo</p>\r\n            <Row>\r\n              <Col md={2}>\r\n                {auth.profileUrl.length <= 2 ? (\r\n                  <Avatar className=\"mb-2\" name={auth.firstName + \" \" + auth.lastName} size=\"100\" round={true} />\r\n                ) : null}\r\n                {auth.profileUrl.length > 2 ? (\r\n                  <Avatar\r\n                    className=\"mb-2\"\r\n                    name={auth.firstName + \" \" + auth.lastName}\r\n                    size=\"100\"\r\n                    round={true}\r\n                    src={auth.profileUrl}\r\n                  />\r\n                ) : null}\r\n              </Col>\r\n              <Col>\r\n                <i className=\"icon-pencil2\" onClick={this.handelClickProfile}></i>\r\n                {this.state.profileClicked ? (\r\n                  <div>\r\n                    <Form inline onSubmit={this.handelSubmitProfile}>\r\n                      <FormGroup className=\"mt-1\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"lastname\"\r\n                          id=\"lastname\"\r\n                          placeholder={this.state.profileUrl}\r\n                          onChange={this.handelChangeProfile}\r\n                        />\r\n                      </FormGroup>\r\n                      <Button className=\"btn-sm ml-2\">Edit</Button>\r\n                    </Form>\r\n                  </div>\r\n                ) : null}\r\n              </Col>\r\n            </Row>\r\n            <Table hover>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Firstname</td>\r\n                  <td className=\"col\" id=\"name\">\r\n                    <h6>\r\n                      {this.state.firstName} <i className=\"icon-pencil2\" onClick={this.handleClick}></i>\r\n                    </h6>\r\n                    {this.state.nameClicked ? (\r\n                      <div>\r\n                        <Form inline onSubmit={this.handelSubmit}>\r\n                          <FormGroup className=\"mt-1\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"firstname\"\r\n                              id=\"firstname\"\r\n                              placeholder={this.state.firstName}\r\n                              onChange={this.handelChangeFirstName}\r\n                              maxLength=\"45\"\r\n                            />\r\n                          </FormGroup>\r\n                          <Button className=\"btn-sm ml-2\">Edit</Button>\r\n                        </Form>\r\n                      </div>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Lastname</td>\r\n                  <td className=\"col\">\r\n                    <h6>\r\n                      {this.state.lastName} <i className=\"icon-pencil2\" onClick={this.handelClickLastName}></i>\r\n                    </h6>\r\n                    {this.state.lastNameClicked ? (\r\n                      <div>\r\n                        <Form inline onSubmit={this.handelSubmitLastName}>\r\n                          <FormGroup className=\"mt-1\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"lastname\"\r\n                              id=\"lastname\"\r\n                              placeholder={this.state.lastName}\r\n                              onChange={this.handleChangeLastName}\r\n                              maxLength=\"45\"\r\n                            />\r\n                          </FormGroup>\r\n                          <Button className=\"btn-sm ml-2\">Edit</Button>\r\n                        </Form>\r\n                      </div>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Gender</td>\r\n                  <td>\r\n                    <h6>\r\n                      {this.state.gender} <i className=\"icon-pencil2\" onClick={this.handelClickGender}></i>\r\n                    </h6>\r\n                    {this.state.genderClicked ? (\r\n                      <div>\r\n                        <Form inline onSubmit={this.handelSubmitGender}>\r\n                          <FormGroup className=\"mt-1\">\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"select\"\r\n                              id=\"male\"\r\n                              onChange={this.handelChangeGender}\r\n                              defaultValue={\"DEFAULT\"}\r\n                            >\r\n                              <option value=\"DEFAULT\" disabled>\r\n                                Choose here\r\n                              </option>\r\n                              <option>Male</option>\r\n                              <option>Female</option>\r\n                              <option>Others</option>\r\n                            </Input>\r\n                          </FormGroup>\r\n                          <Button className=\"btn-sm ml-2\">Edit</Button>\r\n                        </Form>\r\n                      </div>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Weight</td>\r\n                  <td>\r\n                    <h6>\r\n                      {this.state.weight} Kg <i className=\"icon-pencil2\" onClick={this.handelClickWeight}></i>\r\n                    </h6>\r\n                    {this.state.weightClicked ? (\r\n                      <div>\r\n                        <Form inline onSubmit={this.handelSubmitWeight}>\r\n                          <FormGroup className=\"mt-1\">\r\n                            <Input\r\n                              type=\"number\"\r\n                              name=\"firsname\"\r\n                              id=\"weight\"\r\n                              placeholder={this.state.weightClicked}\r\n                              onChange={this.handelChangeWeight}\r\n                            />\r\n                          </FormGroup>\r\n                          <Button className=\"btn-sm ml-2\">Edit</Button>\r\n                        </Form>\r\n                      </div>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Height</td>\r\n                  <td>\r\n                    <h6>\r\n                      {this.state.height} cm <i className=\"icon-pencil2\" onClick={this.handelClickHeight}></i>\r\n                    </h6>\r\n                    {this.state.heightClicked ? (\r\n                      <div>\r\n                        <Form inline onSubmit={this.handelSubmitHeight}>\r\n                          <FormGroup className=\"mt-1\">\r\n                            <Input\r\n                              type=\"number\"\r\n                              name=\"firsname\"\r\n                              id=\"height\"\r\n                              placeholder={this.state.height}\r\n                              onChange={this.handelChangeHeight}\r\n                            />\r\n                          </FormGroup>\r\n                          <Button className=\"btn-sm ml-2\">Edit</Button>\r\n                        </Form>\r\n                      </div>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Quote</td>\r\n                  <td>\r\n                    <h6>\r\n                      {this.state.quote} <i className=\"icon-pencil2\" onClick={this.handleClickQuote}></i>\r\n                    </h6>\r\n                    {this.state.quoteClicked ? (\r\n                      <div>\r\n                        <Form inline onSubmit={this.handelSubmitQuote}>\r\n                          <FormGroup className=\"mt-1\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"firsname\"\r\n                              id=\"examplePassword\"\r\n                              placeholder={this.state.quote}\r\n                              onChange={this.handelChangeQuote}\r\n                              maxlength=\"50\"\r\n                            />\r\n                          </FormGroup>\r\n                          <Button className=\"btn-sm ml-2\">Edit</Button>\r\n                        </Form>\r\n                      </div>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.profile,\r\n    authCheck: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    profileUpdate: (data) => dispatch(profileUpdate(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProfile);\r\n","export const profileUpdate = (data) => {\r\n  console.log(data);\r\n  console.log(\"nameUpdate\");\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(data.authId.userId)\r\n      .update({\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        gender: data.gender,\r\n        height: data.height,\r\n        weight: data.weight,\r\n        quote: data.quote,\r\n        profileUrl: data.profileUrl,\r\n      })\r\n      .then(() => {\r\n        console.log(\"updateNameDone\");\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MyProfile from \"./MyProfile\";\r\nclass MyProfilePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.profile.firstName && this.props.auth ? (\r\n          <MyProfile profile={this.props.profile} auth={this.props.auth} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profile: state.firebase.profile,\r\n    auth: state.firebase.auth.uid\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(MyProfilePage);\r\n","import React from \"react\";\r\nimport { Card, CardFooter, CardBody, CardTitle, CardText, CardLink, CardSubtitle } from \"reactstrap\";\r\nconst InformationBox = (props) => {\r\n  const { eventData } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mt-5\">\r\n        <CardBody>\r\n          <CardTitle>\r\n            <p className=\"running-event-title\">Running Event</p>\r\n          </CardTitle>\r\n          <CardSubtitle>\r\n            <p className=\"font-weight-bold text-center running-event-subtitle\">{eventData.title}</p>\r\n          </CardSubtitle>\r\n        </CardBody>\r\n        <img width=\"100%\" src={eventData.imageUrl} alt=\"runing\" />\r\n        <CardBody>\r\n          <CardText className=\"running-event-description\">{eventData.description}</CardText>\r\n          {eventData.funrunState ? <li className=\"mt-0 mb-0 running-event-categories\">Fun Run (5KM)</li> : null}\r\n          {eventData.miniState ? <li className=\"mt-0 mb-0 running-event-categories\">Mini Marathon (10KM)</li> : null}\r\n          {eventData.halfState ? <li className=\"mt-0 mb-0 running-event-categories\">Half Marathon (21KM)</li> : null}\r\n          {eventData.marathonState ? <li className=\"mt-0 mb-0 running-event-categories\">Marathon (42KM)</li> : null}\r\n          <CardLink href={eventData.eventUrl} target=\"_blank\">\r\n            More & Register\r\n          </CardLink>\r\n        </CardBody>\r\n        <CardFooter className=\"text-center\">Runreana 2020</CardFooter>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InformationBox;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container, Card, CardHeader, CardBody, NavItem } from \"reactstrap\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText, CustomInput } from \"reactstrap\";\r\nimport InformationBox from \"./InformationBox\";\r\nimport { connect } from \"react-redux\";\r\nimport { createEventAction } from \"../store/actions/createEventAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass AdminDashboard extends Component {\r\n  state = {\r\n    title: \"Insert Title\",\r\n    description: \"Insert Event Description\",\r\n    imageUrl: \"https://via.placeholder.com/150\",\r\n    eventUrl: \"\",\r\n    funrunState: false,\r\n    miniState: false,\r\n    halfState: false,\r\n    marathonState: false,\r\n    public: null,\r\n  };\r\n  handelChange = (e) => {\r\n    if (e.target.id === \"funrun\") {\r\n      this.setState({ funrunState: !this.state.funrunState });\r\n    } else if (e.target.id === \"minimarathon\") {\r\n      this.setState({ miniState: !this.state.miniState });\r\n    } else if (e.target.id === \"halfmarathon\") {\r\n      this.setState({ halfState: !this.state.halfState });\r\n    } else if (e.target.id === \"marathon\") {\r\n      this.setState({ marathonState: !this.state.marathonState });\r\n    } else {\r\n      this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n  };\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createEvent(this.state);\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    if (auth.isLoaded) {\r\n      if (!auth[\"admin\"]) return <Redirect to=\"/runrena\" />;\r\n      return (\r\n        <div className=\"admin-page\">\r\n          <Container>\r\n            <Row>\r\n              <Col md=\"1\"></Col>\r\n              <Col md=\"7\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <h4>Create Event</h4>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Form onSubmit={this.handelSubmit}>\r\n                      <FormGroup>\r\n                        <Label for=\"titleEvent\">Event Name</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"titleEvent\"\r\n                          id=\"title\"\r\n                          placeholder=\"Covid 19-KM Virtual Run\"\r\n                          onChange={this.handelChange}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"descriptionEvent\">Description</Label>\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          name=\"descriptionEvent\"\r\n                          id=\"description\"\r\n                          placeholder=\"Covid 19-KM Virtual Run\"\r\n                          onChange={this.handelChange}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleCheckbox\">Categories</Label>\r\n                        <div>\r\n                          <CustomInput type=\"checkbox\" id=\"funrun\" label=\"Fun Run (5KM)\" onChange={this.handelChange} />\r\n                          <CustomInput\r\n                            type=\"checkbox\"\r\n                            id=\"minimarathon\"\r\n                            label=\"Mini Marathon (10KM)\"\r\n                            onChange={this.handelChange}\r\n                          />\r\n                          <CustomInput\r\n                            type=\"checkbox\"\r\n                            id=\"halfmarathon\"\r\n                            label=\"Half Marathon (21KM)\"\r\n                            onChange={this.handelChange}\r\n                          />\r\n                          <CustomInput\r\n                            type=\"checkbox\"\r\n                            id=\"marathon\"\r\n                            label=\"Marathon (42KM)\"\r\n                            onChange={this.handelChange}\r\n                          />\r\n                        </div>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"imageUrl\">Image URL :</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"titleEvent\"\r\n                          id=\"imageUrl\"\r\n                          placeholder=\"Image URL\"\r\n                          onChange={this.handelChange}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"eventUrl\">Event URL:</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"titleEvent\"\r\n                          id=\"eventUrl\"\r\n                          placeholder=\"Event URL\"\r\n                          onChange={this.handelChange}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"eventUrl\">Date Public :</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"public\"\r\n                          id=\"public\"\r\n                          placeholder=\"Event URL\"\r\n                          onChange={this.handelChange}\r\n                        />\r\n                      </FormGroup>\r\n                      <Button className=\"btn-block\">Submit</Button>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n              <Col md=\"3\" className=\"admin-page-information\">\r\n                <InformationBox eventData={this.state} />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createEvent: (eventData) => dispatch(createEventAction(eventData)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.profile,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminDashboard);\r\n","export const createEventAction = (event) => {\r\n  let title = event.title;\r\n  let description = event.description;\r\n  let imageUrl = event.imageUrl;\r\n  let eventUrl = event.eventUrl;\r\n  let funRun = event.funrunState;\r\n  let miniMarathon = event.miniState;\r\n  let halfMarathon = event.halfState;\r\n  let marathon = event.marathonState;\r\n  let publicDate = new Date(event.public);\r\n\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"events\")\r\n      .add({ title, description, imageUrl, eventUrl, funRun, miniMarathon, halfMarathon, marathon, publicDate })\r\n      .then(() => {\r\n        console.log(\"create event\");\r\n        window.location.reload();\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./component/layout/Navbar\";\nimport Dashboard from \"./component/dashboard/Dashboard\";\nimport High from \"./component/dashboard/High\";\nimport \"./App.css\";\nimport SignIn from \"./component/auth/SignIn\";\nimport SignUp from \"./component/auth/SignUp\";\nimport UserDashbord from \"./component/StatActivity/UserDashboard\";\nimport MyProfile from \"./component/MyProfile/MyProfilePage\";\nimport AdminDashboard from \"./component/admin/AdminDashboard\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route path=\"/runrena\" component={High} />\n          <Route exact path=\"/\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/runner/:id\" component={UserDashbord} />\n          <Route path=\"/profile/\" component={MyProfile} />\n          <Route path=\"/admin/\" component={AdminDashboard} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"Login Error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"Login Success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"Sign Out Success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"Signup Succress\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  activities: [\r\n    { id: \"1\", title: \"Phapayom Run\", distance: \"21.00 KM\", pace: \"5:10 /KM\", time: \"12m\" },\r\n    { id: \"2\", title: \"COVID-19 Run\", distance: \"5.00 KM\", pace: \"6:10 /KM\", time: \"2h 48m\" },\r\n    { id: \"3\", title: \"Bangkun Thain Run\", distance: \"10.00 KM\", pace: \"7:10 /KM\", time: \"48m\" },\r\n    { id: \"4\", title: \"Phatthalung Run\", distance: \"10.00 KM\", pace: \"7:10 /KM\", time: \"48m\" }\r\n  ]\r\n};\r\n\r\nconst activityReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_ACTIVITY\":\r\n      console.log(action);\r\n      console.log(\"CREATE PROJECT\");\r\n      const newState = {\r\n        activities: [action.activity, ...state.activities]\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activityReducer;\r\n","const initState = {\r\n  friend: null,\r\n};\r\n\r\nconst runrenaReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"RUNRENA_FRIEND\":\r\n      console.log(\"GET FRIEND\");\r\n      const newState = {\r\n        friend: action.friend,\r\n      };\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default runrenaReducer;\r\n","const initState = {\r\n  activities: [],\r\n};\r\n\r\nconst activityPostReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"ACTIVITY_POST\":\r\n      console.log(\"ACTIVITY_POST\");\r\n      const newState = {\r\n        activityStat: action.activities,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activityPostReducer;\r\n","const initState = {\r\n  activities: [],\r\n};\r\n\r\nconst activityStatReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"ACTIVITY_STAT\":\r\n      console.log(\"GET_ACTIVITY_STAT\");\r\n      const newState = {\r\n        activityStat: action.activities,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activityStatReducer;\r\n","const initState = {\r\n  activities: [],\r\n};\r\n\r\nconst userDataReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_USERS_DATA\":\r\n      console.log(\"GET_USERS_DATA\");\r\n      const newState = {\r\n        users: action.users,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userDataReducer;\r\n","const initState = {\r\n  activities: [],\r\n};\r\n\r\nconst activityByDateReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_ACTIVITY_BY_DAY\":\r\n      console.log(\"GET_ACTIVITY_BY_DAY\");\r\n      const newState = {\r\n        activitiesByDate: action.activities,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activityByDateReducer;\r\n","const initState = {\r\n  activities: [],\r\n};\r\nconst activityUserByDateReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_ACTIVITY_USER_BY_DATE\":\r\n      const newState = {\r\n        activitiesUserByDate: action.activities,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activityUserByDateReducer;\r\n","const initState = {\r\n  activities: [],\r\n};\r\n\r\nconst queryActivityByWeek = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_WEEK_ACTIVITY\":\r\n      console.log(\"GET_WEEK_ACTIVITY\");\r\n      const newState = {\r\n        activitiesByWeek: action.activities,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default queryActivityByWeek;\r\n","var today = new Date();\r\ntoday.setDate(today.getDate() - 7);\r\nvar date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n\r\nconst initState = {\r\n  today: date,\r\n};\r\n\r\nconst limitQueryReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LIMIT_QUERY\":\r\n      console.log(\"xxxxxx\", action.data);\r\n      console.log(\"LIMIT_QUERY\");\r\n      const newState = {\r\n        today: action.data,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default limitQueryReducer;\r\n","const initState = {\r\n  activities: [{ title: 5 }],\r\n};\r\n\r\nconst querySummaryReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"QUERY_SUMMARY\":\r\n      console.log(\"QUERY_SUMMARY\");\r\n      const newState = {\r\n        summaryActivity: action.activities,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default querySummaryReducer;\r\n","const initState = {\r\n  users: [],\r\n};\r\n\r\nconst queryUsersDataReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"QUERY_USERS_DATA\":\r\n      console.log(\"QUERY_USERS_DATA\");\r\n      const newState = {\r\n        users: action.usersData,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default queryUsersDataReducer;\r\n","const initState = {\r\n  event: null,\r\n};\r\n\r\nconst eventReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_EVENT\":\r\n      console.log(\"GET_EVENT\");\r\n      const newState = {\r\n        events: action.events,\r\n      };\r\n      return newState;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default eventReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport activityReducer from \"./activityReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport runrenaReducer from \"./runrenaRuducer\";\r\nimport activityPostReducer from \"../reducers/activityPostReducer\";\r\nimport activityStatReducer from \"../reducers/activityStatReducer\";\r\nimport userDataReducer from \"../reducers/userActionReducer\";\r\nimport activityByDateReducer from \"../reducers/activityByDateReducer\";\r\nimport activityUserByDateReducer from \"../reducers/activityUserByDateReducer\";\r\nimport queryActivityByWeek from \"../reducers/queryActivityByWeek\";\r\nimport limitQueryReducer from \"../reducers/limitQueryReducer\";\r\nimport querySummaryReducer from \"../reducers/querySummaryReducer\";\r\nimport queryUsersDataReducer from \"../reducers/queryUsersDataReducer\";\r\nimport eventReducer from \"../reducers/eventReducer\";\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer, // state from auth reducer\r\n  activities: activityReducer, // activity state\r\n  firestore: firestoreReducer, // state from firestroe\r\n  firebase: firebaseReducer, // state from firebase data\r\n  friend: runrenaReducer,\r\n  activityPost: activityPostReducer,\r\n  activitiesStat: activityStatReducer,\r\n  userData: userDataReducer,\r\n  activityByDate: activityByDateReducer,\r\n  activityUserByDate: activityUserByDateReducer,\r\n  activitiesUserByWeek: queryActivityByWeek,\r\n  limitQueryReducer: limitQueryReducer,\r\n  querySummaryReducer: querySummaryReducer,\r\n  queryUsersDataReducer: queryUsersDataReducer,\r\n  eventReducer: eventReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD5KsmYR3dTKVkKs4j90mFURSYJmH7Y3UM\",\r\n  authDomain: \"runrena-b3aa5.firebaseapp.com\",\r\n  databaseURL: \"https://runrena-b3aa5.firebaseio.com\",\r\n  projectId: \"runrena-b3aa5\",\r\n  storageBucket: \"runrena-b3aa5.appspot.com\",\r\n  messagingSenderId: \"934836139007\",\r\n  appId: \"1:934836139007:web:437ccaa11f9a0097ffedca\",\r\n  measurementId: \"G-LZYG8XJ7F2\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./component/store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: \"users\", attachAuthIsReady: true }), // redux binding for firebase //add attachAuthIsReady for check auth ready\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\n//use this for render dom after firebase auth login\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}